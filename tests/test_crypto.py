from local_network_transport.crypto import crypto

PUBLIC_KEY_1 = """-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3+DADIpwX8AfPwwTyHsW
HdYUXIsYDl+aj52grbpDU7wbbL6vb4n99vKEVOsBZ2x7UDxrGx+eX6hARo6uDjr+
PpjZf2TL7IVaGdhAgKxqsb1mu7oMh4WONMnvCnsR5lhH1W5BX8r1q1acMXr6+f+u
oujxEL+ytIS63fNAMk60cA4iWEu50mhTbNHHKRS/+r6+86V4TgnqxFFbpGIg3SL9
DxTQjdFhwYWXqxq2HMTMKyk2nInzp6Acq0g4eIDM93mp6IOQLOGCCgxZY4LTeMzu
RzLKnkDrxLXaso7DpVaFS8CSQhTWibjHeI2TD19QmHpCrcMj+Ytbsj0s0YaHELE5
ywIDAQAB
-----END PUBLIC KEY-----"""
PRIVATE_KEY_1 = """-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA3+DADIpwX8AfPwwTyHsWHdYUXIsYDl+aj52grbpDU7wbbL6v
b4n99vKEVOsBZ2x7UDxrGx+eX6hARo6uDjr+PpjZf2TL7IVaGdhAgKxqsb1mu7oM
h4WONMnvCnsR5lhH1W5BX8r1q1acMXr6+f+uoujxEL+ytIS63fNAMk60cA4iWEu5
0mhTbNHHKRS/+r6+86V4TgnqxFFbpGIg3SL9DxTQjdFhwYWXqxq2HMTMKyk2nInz
p6Acq0g4eIDM93mp6IOQLOGCCgxZY4LTeMzuRzLKnkDrxLXaso7DpVaFS8CSQhTW
ibjHeI2TD19QmHpCrcMj+Ytbsj0s0YaHELE5ywIDAQABAoIBAAroT1MNF6aCnMMc
moYlARHZEUrk9/oTTFt86YwtTARzYL6ul6uOhJIYhLwCayIX1fY1y14Z70Rn1SHa
574Hv8Va+xXK2mieoqIpuBLM07HvMWcqDFw59JC72eqfzmJzoKRUZ9j78XY0lQ2Q
GVQ+0cpcIQqY3GMRKG2R4WnSDdZ7snY5ZK4LQoYyyIWoDKxqN+BhnNgWf0hmXyvx
LGYEJgaNbvl+ZevGW/nJuFa6pYTojulmgTTWPyNIx7K2k3i8hwLjOsv8w6N81lcC
jrtFmoLTcTRp7w2XmXe9BnggD5d2rf7vc9s7R/ITu8JHKz4Lm40O65vYu/K4JgK/
8znHvtECgYEA5kNfbQA3cB94j3WDhh/UdFCpilX1Ty/eUyBjYrkno7MJDvabBwBN
ySbzmXzerA6aZZPbUsIwcWw0G41zo21gmsUkxt8VYBmENVyue1wCj2haC0cOlJ3I
kOszWae8Z6tDvTu8k7x8FutHfZAA8o7FK5m8qjvMe2PPqzXKYcJwmWkCgYEA+Oas
aHJOWM1xsYhjGURGOra/ihg0FkGn5ze4e1bZbng7GPzYRolkuZQhz2Ez9LEyY4SF
DItc6PBaWRcgOqwDHH6CpmkDFSvnUp7uLm9YI1iOgKeufqLn6WF+rK86aLWNT7lX
J7pN/ksTGwdaE4mt6B9Kz8m+kmtxiWS83ohNPxMCgYBnHukPgbdSKWXuqWwblwmo
ha9H2rMfoYppo+meftk3wKhf4SUQf5xWZ3FU3c1DNM8EirEAYSMcyJ6VcEXHfOZ0
qbGMtr916DeDRlyFtnEXFF6vCkWHXRpDfHHkxu/jZZnSl3welZzlDr1XiDREbJf0
rMcHXfx3jf2k6VQXb+LJcQKBgHTvuvRfL5vc+ZtU3moSf4Q6M4bnlCEYu4+PyCZ6
STDzX6B/ugR5rE7b336UxlohnfDPY8re9smhknDkwomOIvASJ8OS9pXNyKIydOhv
+1Kv2lNrdDmew6IL4f2zXZewJDHee6n4h4f/MXyzWYhwWLoDaZxxxgz4WaEZKPrL
wq7tAoGBAMtssN2/oTekEMfkzJULiv0JTSstolIiQUkgnwsNOmLT6Vy1OxQwvZzc
oQVsyYb7ka6jlAmcd1bK1RyzvM+G6cdzleurCJ9xTyWF1endbY+rTgJhEnVwue4t
kBB+8HihcE1etDgyCqa4/7ADmPfJ4skTDaNbibgPOw84peNDvkTP
-----END RSA PRIVATE KEY-----"""

PUBLIC_KEY_2 = """-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqCNXUwDt7VA5rUd9Ipby
qlYlzHjg+gf8/rqF/NojL22YjDzrJp7bP435u1w2+Rh6R8r6WIHDLBDfxJRNQ6qh
cjg7AqNPSUWkbKni2ygNlokiFLTKbyhEgw57YlAnunTrXdXjWEjBfbOfpqNcVMSJ
q7G5rkFWLkB8FAZmD/lMkALKPwaoMwn3VrHPler42Sku6vh2D3iGl/U6kGtg8Gf7
kx1Xh8T1wReFcZ7zSRJylYl+TfZ2paQ2toicCVfQ7Olg6sJKSoCTyTvHPisTTtHV
XBSy7vl0MrcszsdgtxHPCmI/klXstiWkAGr+XIaO8k59xqe/fDWswLVXl9dwZonn
QwIDAQAB
-----END PUBLIC KEY-----"""
PRIVATE_KEY_2 = """-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAqCNXUwDt7VA5rUd9IpbyqlYlzHjg+gf8/rqF/NojL22YjDzr
Jp7bP435u1w2+Rh6R8r6WIHDLBDfxJRNQ6qhcjg7AqNPSUWkbKni2ygNlokiFLTK
byhEgw57YlAnunTrXdXjWEjBfbOfpqNcVMSJq7G5rkFWLkB8FAZmD/lMkALKPwao
Mwn3VrHPler42Sku6vh2D3iGl/U6kGtg8Gf7kx1Xh8T1wReFcZ7zSRJylYl+TfZ2
paQ2toicCVfQ7Olg6sJKSoCTyTvHPisTTtHVXBSy7vl0MrcszsdgtxHPCmI/klXs
tiWkAGr+XIaO8k59xqe/fDWswLVXl9dwZonnQwIDAQABAoIBADPrkeQmRdKB8wWQ
rVIYlb/G0W5GJ4beH6BTXdu6SqIzMCeiCiVHacHC6EqUi7848U2pHsxk6a16Wncc
Ko3KK4eXWJWUc3/XWxJZFZ4CTMve9eC6AUb5AssLlktCIDqCL0ovKcCR2vojlRnC
mVjtxet4erOWJnQq4oXWgf7Nx3gye9uOrJlcDj7EUpWUf314vyw7l/qo7BHlh/gR
2myNJ2MArVJhPCqKuhSXG9wPI7Gr0s4R33Cbj7loAbQlVO6aZRqbzPQdLjxNBttb
cRlSH4ADq/QF2UkuPTWvoZgWrRKVYyOSQgBKy+tJkYQR33pF4LoMNntZp3JqOFPR
0YMRMq0CgYEAwEKaBYT8HkqpHI+Z9r5xWm9Rham8oIvLkJroX4UaOLe/t88Umwrt
vr3JhhSJXCXNrd4BD59hAUJzBQJBoDrKv9PwI4iGK/KetcnOSv+8Lg6rHxuKHHxJ
Pe5PqiDEdnGzxaVhyZbctLZoWOrcb32lA5phyuwQ/Yn0gRjbaufgZj0CgYEA3+F2
ACruSQmsh07pmgdV6zpDEpllnix5sCmX2Jy2e7GNEbOb+ZbgE7XZVGWZArFKepDN
MEugquNcj2d9gAEh4+ldeBC3DCPpvit6F7IV1taqrhJev5+3Z4mpFo7pRyYp30HZ
AKNlPgUyF34h3xd96u8eX6/cZLsoDPwGlg7V238CgYEAqHl0aIPJPm4kVP/NZjgq
Mpo7sMo1neYCoxvrptCHUs5J9TNEljx0a2H590GFwLbrzoEtItiB882b5va8NUFv
q7t3wlt/X4GC7EAEQxpod1+pOmAynZWXxOpQ6v89yaEHbJno3/MQQldZhxl/wz8x
279sFJrapKJAHOSAWeUJce0CgYADK44gMnttTVXEFLn6FGCDFDAe800dEEQo2m3s
A0wSNFFrDsAGqLxDiy+ookeoYhpL4gEFzgxYXx/QaAa+6UUxlPxd1t7ArUGCD9uK
ulrUz/VawafVzs0qCij6yMtE1qWBI82O1MF6P1iWPJL+NbbyvLARaswUIRJQHMF7
HnqowQKBgGmdx0TjtAXPCKG3VhxyVG4k6iI6Myw0X2hDXJcnn4niSAmhD/CoETBK
ZG9y7F8Cg26FCc5xXT199dJ8lY3MH9V6dp2hoOihrxZU7pMA6n2m/BwH4yO1pV6P
yKMDq9q7oOIo7xJUfehELjujRA+B3VtZ/8Rwk2IwQBigViJC3HsZ
-----END RSA PRIVATE KEY-----"""

DATA = b"123abczZ\0\244"*100


def test_encrypt_decrypt():
    assert DATA == crypto.decrypt(PRIVATE_KEY_2, crypto.encrypt(PUBLIC_KEY_2, DATA))


def test_sing_verify():
    signature = crypto.sign(PRIVATE_KEY_1, DATA)
    crypto.verify_signature(PUBLIC_KEY_1, DATA, signature)


def test_sign_and_encrypt():
    signed_and_encrypted = crypto.sign_and_encrypt(PRIVATE_KEY_1, PUBLIC_KEY_1, PUBLIC_KEY_2, DATA)
    data, signer_public_key = crypto.decrypt_and_verify(PRIVATE_KEY_2, signed_and_encrypted)
    assert data == DATA
    assert signer_public_key == PUBLIC_KEY_1